@each $attr, $val in $colors {
  .background-#{$attr} {
    background-color: unquote($val);
  }
  .darken-background-#{$attr} {
    background-color: darken(unquote($val), 10);
  }

  .double-darken-background-#{$attr} {
    background-color: darken(unquote($val), 15);
  }

  .lighten-background-#{$attr} {
    background-color: lighten(unquote($val), 10);
  }

  .double-lighten-background-#{$attr} {
    background-color: lighten(unquote($val), 15);
  }

  .#{$attr} {
    color: unquote($val) !important;
  }

  .darken-#{$attr} {
    color: darken(unquote($val), 10) !important;
  }

  .lighten-#{$attr} {
    color: lighten(unquote($val), 10) !important;
  }

  .border-bottom-#{$attr} {
    border-bottom: 1px solid unquote($val);
  }

  .hover-#{$attr} {

    &:hover {
      @if mixin-exists(transition) {
        @include transition(.1s);
      }
      color: unquote($val) !important;
    }
  }
}

.light {
  color: lookup($colors, 'light');
}

.background-color {
  background-color: $background-color !important;
}

.controls-text-color {
  color: $controls-text-color !important;
}

.background-controls-text-color {
  background-color: $controls-text-color !important;
}

.lighten-text {
  color: lighten($controls-text-color, 25) !important;
}

.double-lighten-text {
  color: lighten($controls-text-color, 45) !important;
}

.darken-text {
  color: darken($text-color, 25) !important;
}

.double-darken-text {
  color: darken($text-color, 45) !important;
}

.text-color {
  color: $text-color !important;
}

.lighten-background {
  background-color: lighten($background-color, 5) !important;
}

.double-lighten-background {
  background-color: lighten($background-color, 10) !important;
}

.darken-background {
  background-color: darken($background-color, 5) !important;
}

.double-darken-background {
  background-color: darken($background-color, 10) !important;
}
